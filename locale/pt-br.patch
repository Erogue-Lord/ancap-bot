diff -ruN ancap-en/.gitignore ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/.gitignore
--- ancap-en/.gitignore	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/.gitignore	2020-06-10 19:32:17.740969000 -0300
@@ -0,0 +1,6 @@
+env
+__pycache__
+.vscode
+config.json
+runtime.txt
+Procfile
\ No newline at end of file
diff -ruN ancap-en/bot_ancap.py ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/bot_ancap.py
--- ancap-en/bot_ancap.py	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/bot_ancap.py	2020-06-10 19:32:18.131726300 -0300
@@ -0,0 +1,39 @@
+import os
+from itertools import cycle
+import json
+
+import discord
+from discord.ext import (commands, tasks)
+
+
+class BotAncap(commands.Bot):
+    def __init__(self):
+        self.config = json.load(open('data/config.json'))["bot"]
+        super().__init__(command_prefix=self.config["prefix"])
+        self.status = cycle([
+            discord.Game(name="sonegador de imposto simulator"),
+            discord.Activity(type=discord.ActivityType.listening, name="dicas para sonegar imposto"),
+            discord.Activity(type=discord.ActivityType.watching, name="tutorial de como sonegar imposto")
+        ])
+        self.load()
+        self.run(self.config["token"])
+
+    async def on_ready(self):
+        print(f'We have logged in as {self.user}')
+        self.status_change.start()
+
+    @tasks.loop(seconds=30)
+    async def status_change(self):
+        await self.change_presence(activity=next(self.status))
+
+    async def on_command_error(self, ctx, error):
+        if isinstance(error, discord.ext.commands.CommandError):
+            await ctx.send('Algo de errado não está certo...')
+
+    def load(self):
+        for filename in os.listdir(os.path.abspath('cogs')):
+            if filename.endswith('.py'):
+                self.load_extension(f'cogs.{filename[:-3]}')
+
+if __name__ == "__main__":
+    BotAncap()
\ No newline at end of file
diff -ruN ancap-en/cogs/Adm.py ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/cogs/Adm.py
--- ancap-en/cogs/Adm.py	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/cogs/Adm.py	2020-06-10 19:32:18.528007700 -0300
@@ -0,0 +1,137 @@
+import discord
+from discord.ext import commands
+
+class Adm(commands.Cog):
+    def __init__(self, client):
+        self.client = client
+
+    @commands.command(help='contrata polícia privada(moderadores) pro seu canal')
+    async def mod(self, ctx, user):
+        channel = ctx.channel
+        server = ctx.guild
+        target = server.get_member(ctx.message.mentions[0].id)
+        roles = [role.name for role in ctx.message.author.roles]
+        if not channel.name in roles:
+            await ctx.send("Você não tem essa permição")
+            return 0
+        await channel.set_permissions(target, manage_messages=True, send_messages=True)
+        await ctx.send(f'Usuário {target} promovido a moderador!')
+
+    @commands.command()
+    async def demote(self, ctx, user):
+        channel = ctx.channel
+        server = ctx.guild
+        target = server.get_member(ctx.message.mentions[0].id)
+        roles = [role.name for role in ctx.message.author.roles]
+        if not channel.name in roles:
+            await ctx.send("Você não tem essa permição")
+            return 0
+        await channel.set_permissions(target, manage_messages=False)
+        await ctx.send(f'Usuário {target} rebaixado')
+
+    @commands.command(help='Impede um usuário de falar no seu canal')
+    async def mute(self, ctx, user):
+        server = ctx.guild
+        if user == '*':
+            target = server.default_role
+            message = 'Todos os usuários foram mutados'
+        else:
+            target = server.get_member(ctx.message.mentions[0].id)
+            message = f"Usuário {target} foi mutado"
+        channel = ctx.channel
+        perm = channel.permissions_for(ctx.message.author).manage_messages
+        if perm:
+            await channel.set_permissions(target, send_messages=False)
+            await ctx.send(message)
+        else: 
+            await ctx.send("Você não tem essa permição")
+
+    @commands.command(help='Impede um usuário de falar no seu canal')
+    async def unmute(self, ctx, user):
+        server = ctx.guild
+        if user == '*':
+            target = server.default_role
+            message = 'Todos os usuários foram desmutados'
+        else:
+            target = server.get_member(ctx.message.mentions[0].id)
+            message = f"Usuário {target} foi desmutado"
+        channel = ctx.channel
+        perm = channel.permissions_for(ctx.message.author).manage_messages
+        if perm:
+            await channel.set_permissions(target, send_messages=True)
+            await ctx.send(message)
+        else: 
+            await ctx.send("Você não tem essa permição")
+    
+    @commands.command(help='deleta um canal')
+    async def deletar(self, ctx):
+        def check(message):
+            return message.author == ctx.message.author and (message.content == "s" or message.content == "n")
+        server = ctx.guild
+        channel = ctx.channel
+        deleted_channel = discord.utils.get(server.channels, name=channel.name)
+        role = discord.utils.get(server.roles, name=channel.name)
+        roles = [role.name for role in ctx.message.author.roles]
+        if not channel.name in roles:
+            await ctx.send("Você não tem essa permição")
+            return 0
+        else:
+            await ctx.send("Você quer deletar esse canal?[s/n]")
+            msg = await self.client.wait_for('message', check=check, timeout=30)
+            if msg.content == 's':
+                try:
+                    await role.delete()
+                except:
+                    pass
+                await deleted_channel.delete()
+            elif msg.content == 'n':
+                await ctx.send("Operação cancelada")
+
+    @commands.command(help='Deixa seu canal NSFW')
+    async def nsfw(self, ctx):
+        server = ctx.guild
+        channel = ctx.channel
+        role = discord.utils.get(server.roles, name=channel.name)
+        roles = [role.name for role in ctx.message.author.roles]
+        if not channel.name in roles:
+            await ctx.send("Você não tem essa permição")
+        else:
+            if channel.nsfw:
+                await channel.edit(nsfw=False)
+                await ctx.send(f"{channel.name} deixou de ser NSFW")
+            else:
+                await channel.edit(nsfw=True)
+                await ctx.send(f"{channel.name} agora é NSFW")
+
+    @commands.command(help='bota slowmode no canal por n segundos')
+    async def slowmode(self, ctx, time: int):
+        if time > 21600:
+            await ctx.send("O limite é 21600 segundos")
+            return 0
+        server = ctx.guild
+        channel = ctx.channel
+        role = discord.utils.get(server.roles, name=channel.name)
+        roles = [role.name for role in ctx.message.author.roles]
+        if not channel.name in roles:
+            await ctx.send("Você não tem essa permição")
+        else:
+            await channel.edit(slowmode_delay=time)
+            if time == 0:
+                await ctx.send("Slowmode desativado")
+            else:
+                await ctx.send(f"Slowmode de {time} segundos ativado")
+
+    @commands.command(help='Muda o tópico do seu canal')
+    async def topico(self, ctx, *, topic: str):
+        server = ctx.guild
+        channel = ctx.channel
+        role = discord.utils.get(server.roles, name=channel.name)
+        roles = [role.name for role in ctx.message.author.roles]
+        if not channel.name in roles:
+            await ctx.send("Você não tem essa permição")
+        else:
+            await channel.edit(topic=topic)
+            await ctx.send(f'Tópico alterado para "{topic}"')
+
+def setup(client):
+    client.add_cog(Adm(client))
\ No newline at end of file
diff -ruN ancap-en/cogs/Basics.py ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/cogs/Basics.py
--- ancap-en/cogs/Basics.py	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/cogs/Basics.py	2020-06-10 19:34:46.061266300 -0300
@@ -0,0 +1,23 @@
+import discord
+from discord.ext import commands
+
+class Basics(commands.Cog):
+    def __init__(self, client):
+        self.client = client
+
+    @commands.command(help='Calcula a latência do bot')
+    async def ping(self, ctx):
+        latency = int(round(self.client.latency * 1000, 0))
+        await ctx.send(f'Pong! {latency}ms')
+
+    @commands.command(help='Informações sobre o bot')
+    async def info(self, ctx):
+        embed=discord.Embed(title="Um Bot Anarcocapitalista", 
+        description="Esse bot foi criado para simular uma economia anarcocapitalista no discord\n[github](https://github.com/Erogue-Lord/bot-ancap)", 
+        color=0xfaff00)
+        embed.set_author(name="Bot Ancap")
+        embed.set_footer(text="criado bor @Erogue Lord#2332")
+        await ctx.send(embed=embed)
+
+def setup(client):
+    client.add_cog(Basics(client))
\ No newline at end of file
diff -ruN ancap-en/cogs/Economy.py ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/cogs/Economy.py
--- ancap-en/cogs/Economy.py	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/cogs/Economy.py	2020-06-10 19:32:19.321443000 -0300
@@ -0,0 +1,145 @@
+from decimal import Decimal
+from datetime import (datetime, timedelta)
+import re
+import json
+import os
+
+import discord
+from discord.ext import commands
+
+from db import (DataBase, transaction)
+
+class Economy(commands.Cog):
+    def __init__(self, client):
+        self.config = json.load(open('data/config.json'))
+        self.client = client
+
+    def registrate(self, id: int):
+        with DataBase(self.config["db"]) as db:
+            db.cursor.execute(f'''
+            INSERT into users (user_id, balance)
+            VALUES ({id}, 0.00);
+            ''')
+    
+    def pay(self, now: datetime, _id: int) -> str:
+        with DataBase(self.config["db"]) as db:
+            db.cursor.execute(f'''
+            UPDATE users
+            SET 
+                work = '{now}',
+                balance = balance + {self.config["bot"]["wage"]}
+            WHERE
+                user_id = {_id};
+            ''')
+        return f'Você ganhou AC${self.config["bot"]["wage"]:.2f}'
+
+    @commands.Cog.listener()
+    async def on_member_join(self, member):
+        self.registrate(member.id)
+        role = discord.utils.get(member.guild.roles, name='ancap')
+        await member.add_roles(role)
+
+    @commands.command(help='Cria sua conta')
+    async def init(self, ctx):
+        _id = ctx.author.id
+        with DataBase(self.config["db"]) as db:
+            db.cursor.execute(f'''
+            select user_id from users where user_id = {_id};
+            ''')
+            result = db.cursor.fetchall()
+        if len(result) == 0:
+            self.registrate(_id)
+            role = discord.utils.get(ctx.guild.roles, name='ancap')
+            await ctx.author.add_roles(role)
+            await ctx.send('Usuário registrado com sucesso!')
+        else:
+            await ctx.send('Você já está registrado')
+
+    @commands.command(help='Ganha dinheiro (pode ser usado depois de um intervalo de tempo)')
+    async def trabalhar(self, ctx):
+        _id = ctx.author.id
+        with DataBase(self.config["db"]) as db:
+            db.cursor.execute(f'''
+            select work from users where user_id = {_id};
+            ''')
+            try:
+                date = db.cursor.fetchall()[0][0]
+            except:
+                await ctx.send("use $init para criar uma conta")
+                return 0
+        now = datetime.now()
+        if date == None:
+            await ctx.send(self.pay(now, _id))
+        else:
+            if date + timedelta(seconds=self.config["bot"]["cooldown"]) <= now:
+                await ctx.send(self.pay(now, _id))
+            else:
+                intervalo = (date + timedelta(seconds=self.cooldown)) - now
+                await ctx.send(f"Você tem que esperar {intervalo - timedelta(microseconds=intervalo.microseconds)} para trabalhar novamente")
+
+
+    @commands.command(help='Mostra seu saldo')
+    async def saldo(self, ctx):
+        user_id = ctx.author.id
+        with DataBase(self.config["db"]) as db:
+            db.cursor.execute(f'''
+            select balance::money::numeric::float8 from users where user_id = {user_id}
+            ''')
+            try:
+                balance = Decimal(db.cursor.fetchall()[0][0])
+            except:
+                await ctx.send('Você não está registrado, use $init para criar sua conta bancária')
+            else:
+                await ctx.send(f'{ctx.author} tem AC${balance:.2f}')
+
+    @commands.command(help='da dinheiro ao seu amiguinho')
+    async def trans(self, ctx, amount, user):
+        amount = abs(Decimal(amount))
+        target_id = ctx.message.mentions[0].id
+        user_id = ctx.author.id
+        server = ctx.guild
+        try:
+            result = transaction(self.config["db"], user_id, amount, target_id)
+        except ValueError as error:
+            result = error
+        else:
+            result = f'AC${amount:.2f} foram tranferidos para {server.get_member(target_id)}'
+        await ctx.send(result)
+
+    @commands.command(help='Compra um canal só seu')
+    async def canal(self, ctx, *, name):
+        def check(message):
+            return message.author == ctx.message.author and (message.content == "s" or message.content == "n")
+        server = ctx.guild
+        category = discord.utils.get(server.categories, name=self.config["bot"]["text_channel_category"])
+        name = re.findall('[a-z,0-9,_, ]*', name.lower())
+        name = ''.join(name)
+        if len(name) < 1:
+            await ctx.send("nome invalido")
+            return 0
+        name = ''.join(name)
+        new_channel = discord.utils.get(server.channels, name=name)
+        if new_channel:
+            await ctx.send('Um canal com esse nome ja existe! Tente criar com outro nome')
+            return 0
+        await ctx.send('Você quer criar um canal? isso ira te custar AC$100[s/n]')
+        msg = await self.client.wait_for('message', check=check, timeout=30)
+        if msg.content == 's':
+            user = ctx.message.author
+            _id = user.id
+            try:
+                result = transaction(self.config["db"], _id, Decimal(self.config["bot"]["channel_price"]))
+            except ValueError as error:
+                result = error
+            else:
+                channel = await server.create_text_channel(name, category=category)
+                role = await server.create_role(name=channel.name)
+                await channel.set_permissions(role, manage_messages=True, send_messages=True)
+                await user.add_roles(role)
+                result = f'Canal {channel.name} criado'
+            await ctx.send(result)
+        elif msg.content == 'n':
+            await ctx.send('Operação cancelada')
+
+def setup(client):
+    client.add_cog(Economy(client))
\ No newline at end of file
diff -ruN ancap-en/cogs/Gambling.py ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/cogs/Gambling.py
--- ancap-en/cogs/Gambling.py	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/cogs/Gambling.py	2020-06-10 19:35:28.611990600 -0300
@@ -0,0 +1,55 @@
+import random
+from decimal import Decimal
+import os
+import json
+
+import requests
+from bs4 import BeautifulSoup
+import texttable
+import discord
+from discord.ext import commands
+
+from db import transaction
+
+class Gambling(commands.Cog):
+    def __init__(self, client):
+        self.client = client
+        self.credentials = json.load(open('data/config.json'))["db"]
+
+    def dice(self, sides, bet, number, user) -> str:
+        result = random.randint(0, sides)
+        if result == number:
+            try:
+                result = transaction(self.credentials, user, -(bet*(sides-1)))
+            except ValueError as error:
+                return error
+            else:
+                return f'Você ganhou AC${bet*(sides-1):.2f}!'
+        else:
+            try:
+                result = transaction(self.credentials, user, bet)
+            except ValueError as error:
+                return error
+            else:
+                return f'Você perdeu AC${bet:.2f}'
+
+    @commands.command(help='Joga uma moeda, 2x a aposta caso ganhe')
+    async def moeda(self, ctx, bet: Decimal):
+        user = ctx.message.author.id
+        result = self.dice(2, bet, 2, user)
+        await ctx.send(result)
+
+    @commands.command(help='Rola um dado, 6x a aposta caso ganhe')
+    async def dado(self, ctx, bet: Decimal):
+        user = ctx.message.author.id
+        result = self.dice(6, bet, 6, user)
+        await ctx.send(result)
+
+    @commands.command(help='Rola um dado de 20 lados, 20x a aposta caso ganhe')
+    async def d20(self, ctx, bet: Decimal):
+        user = ctx.message.author.id
+        result = self.dice(20, bet, 20, user)
+        await ctx.send(result)
+
+def setup(client):
+    client.add_cog(Gambling(client))
\ No newline at end of file
diff -ruN ancap-en/data/config-template.json ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/data/config-template.json
--- ancap-en/data/config-template.json	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/data/config-template.json	2020-06-10 19:32:19.837649600 -0300
@@ -0,0 +1,17 @@
+{
+    "db": {
+    "host": "",
+    "dbname": "",
+    "user": "",
+    "port": "",
+    "password": ""
+    },
+    "bot": {
+        "token": "",
+        "wage": 25.00,
+        "channel_price": 100.00,
+        "cooldown": 60,
+        "text_channel_category": "Canais de Texto",
+        "prefix": "$"
+    }
+}
\ No newline at end of file
diff -ruN ancap-en/data/users.sql ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/data/users.sql
--- ancap-en/data/users.sql	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/data/users.sql	2020-06-10 19:32:19.969036800 -0300
@@ -0,0 +1,7 @@
+CREATE TABLE users
+(
+    user_id bigint NOT NULL,
+    balance numeric(10, 2) NOT NULL,
+    work timestamp without time zone,
+    PRIMARY KEY (user_id)
+);
\ No newline at end of file
diff -ruN ancap-en/db/__init__.py ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/db/__init__.py
--- ancap-en/db/__init__.py	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/db/__init__.py	2020-06-10 19:32:20.197264300 -0300
@@ -0,0 +1,2 @@
+from .db import DataBase
+from .transaction import transaction
\ No newline at end of file
diff -ruN ancap-en/db/db.py ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/db/db.py
--- ancap-en/db/db.py	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/db/db.py	2020-06-10 19:32:20.447846000 -0300
@@ -0,0 +1,16 @@
+import os
+
+import psycopg2
+
+class DataBase:
+    def __init__(self, credentials):
+        self.credentials = credentials
+
+    def __enter__(self):
+        self.connector = psycopg2.connect(**self.credentials)
+        self.cursor = self.connector.cursor()
+        return self
+    
+    def __exit__(self, *results):
+        self.connector.commit()
+        self.connector.close()
\ No newline at end of file
diff -ruN ancap-en/db/transaction.py ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/db/transaction.py
--- ancap-en/db/transaction.py	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/db/transaction.py	2020-06-10 19:32:20.705264900 -0300
@@ -0,0 +1,35 @@
+from decimal import Decimal
+
+from .db import DataBase
+
+def transaction(credentials, user, amount: Decimal, target=None) -> int:
+    with DataBase(credentials) as db:
+        db.cursor.execute(f'''
+        select balance::money::numeric::float8 from users where user_id = {user}
+        ''')
+        balance = db.cursor.fetchall()
+        if len(balance) == 0:
+            raise ValueError('Você nao está registrado, use $init para criar sua conta')
+        balance = Decimal(balance[0][0])
+        if balance >= amount:
+            try:
+                if target != None:
+                    db.cursor.execute(f'''
+                    select user_id from users where user_id = {target}
+                    ''')
+                    if len(db.cursor.fetchall()) == 0:
+                        raise ValueError('Usuário inexistente')
+                    db.cursor.execute(f'''
+                    UPDATE users
+                    SET balance = balance + {amount}
+                    WHERE user_id = {target}; 
+                    ''')
+                db.cursor.execute(f'''
+                UPDATE users
+                SET balance = balance - {amount}
+                WHERE user_id = {user};
+                ''')
+            except:
+                raise ValueError('Falha na transação')
+        else:
+            raise ValueError('Você não tem esse dinheiro')
\ No newline at end of file
diff -ruN ancap-en/LICENSE ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/LICENSE
--- ancap-en/LICENSE	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/LICENSE	2020-06-10 19:32:17.886877700 -0300
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2020 Erogue-Lord
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff -ruN ancap-en/README.rst ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/README.rst
--- ancap-en/README.rst	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/README.rst	2020-06-10 19:32:18.002805200 -0300
@@ -0,0 +1,28 @@
+=========
+Bot Ancap
+=========
+
+um bot para o discord que simula uma economia anarco capitalista ficticia, esta sendo criado para um experimento social em um servidor
+
+`Servidor`_
+
+==========
+Instalação
+==========
+
+instale o ``requirements.txt``::
+
+  pip install -r requirements.txt
+
+se o pip nao estiver no path do seu sistema use ``python -m`` ou ``python3 -m``
+
+crie um banco de dados postgresql com o ``users.sql`` e use o ``config-template.json`` e crie um ``config.json`` com os dados requeridos para o bot funcionar.
+
+=======
+Licença
+=======
+
+`MIT`_
+
+.. _Servidor: https://discord.gg/ErR3bh3
+.. _MIT: https://choosealicense.com/licenses/mit/
\ No newline at end of file
diff -ruN ancap-en/requirements.txt ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/requirements.txt
--- ancap-en/requirements.txt	1969-12-31 21:00:00.000000000 -0300
+++ ancap-bot-0c7a30bf0bf2f4321704ef2970836053e388755a/requirements.txt	2020-06-10 19:32:18.245657000 -0300
@@ -0,0 +1,16 @@
+aiohttp==3.6.2
+async-timeout==3.0.1
+attrs==19.3.0
+beautifulsoup4==4.9.0
+certifi==2020.4.5.1
+chardet==3.0.4
+discord.py==1.3.3
+idna==2.9
+multidict==4.7.6
+psycopg2==2.8.5
+requests==2.23.0
+soupsieve==2.0.1
+texttable==1.6.2
+urllib3==1.25.9
+websockets==8.1
+yarl==1.4.2
